name: Test Suite

on:
  push:
    branches: [main, develop]
    paths: 
      - 'scripts/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'pytest.ini'
      - '.github/workflows/test.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'scripts/**'
      - 'tests/**'
      - 'requirements.txt'
      - 'pytest.ini'
      - '.github/workflows/test.yml'
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.11'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Setup test environment variables
        run: |
          echo "AWS_REGION=us-east-1" >> $GITHUB_ENV
          echo "AWS_S3_BUCKET=test-bucket" >> $GITHUB_ENV
          echo "SPOTIFY_CLIENT_ID=test_client_id" >> $GITHUB_ENV
          echo "SPOTIFY_CLIENT_SECRET=test_client_secret" >> $GITHUB_ENV
          echo "SPOTIFY_REFRESH_TOKEN=test_refresh_token" >> $GITHUB_ENV
          echo "SPOTIFY_SHOW_ID=test_show_id" >> $GITHUB_ENV
          echo "BASE_URL=https://cdn.test.com" >> $GITHUB_ENV
          echo "PODCAST_TITLE=Test Podcast" >> $GITHUB_ENV
          echo "PODCAST_DESCRIPTION=Test podcast description" >> $GITHUB_ENV
          echo "PODCAST_AUTHOR=Test Author" >> $GITHUB_ENV
          echo "PODCAST_EMAIL=test@example.com" >> $GITHUB_ENV
          
      - name: Run unit tests
        run: |
          pytest tests/ \
            --verbose \
            --tb=short \
            --cov=scripts \
            --cov-report=term-missing \
            --cov-report=xml \
            --junit-xml=test-results.xml \
            -m "not slow and not integration and not network"
            
      - name: Run integration tests
        run: |
          pytest tests/ \
            --verbose \
            --tb=short \
            -m "integration and not network" \
            --junit-xml=integration-test-results.xml
            
      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: |
            test-results.xml
            integration-test-results.xml
            coverage.xml
            htmlcov/
          retention-days: 30
          
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false